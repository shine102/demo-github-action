name: ci-cd

on: 
  pull_request:
    branches: [ master ]

jobs:
  # scan-iac:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run Snyk to check terraform files for security issues
  #       uses: snyk/actions/iac@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY }}
  #       continue-on-error: true
  #       with:
  #         args: --sarif-file-output=snyk_iac.sarif > snyk_iac.txt
  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: snyk_iac.sarif
  #     - name: Archive results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: report
  #         path: snyk_iac.sarif
  #     - name: Fail pipeline if finding with severity high found
  #       run: |
  #         if grep -q '[High]' snyk_iac.txt || grep -q '[Critical]' snyk_iac.txt; then
  #           echo "found!"
  #           exit 1
  #         fi
  # dast-scan:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: OWASP ZAP
  #       uses: zaproxy/action-baseline@v0.9.0
  #       with:
  #         target: "http://testphp.vulnweb.com/"
  #         fail_action: false
  #     - name: Pull report
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: zap_scan
  #     - name: Fail pipeline if finding with severity high found  
  #       run: |
  #         if ! grep -q '| High | 0 |' report_md.md; then
  #           echo "found!"
  #           exit 1
  #         fi
  infracost:
    name: Infracost
    runs-on: ubuntu-latest
    env:
      TF_ROOT: terraform/module
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    permissions:
      contents: read
      # Required to post comments
      pull-requests: write
    steps:
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.base.ref }}'

      # Generate Infracost JSON file as the baseline.
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=${TF_ROOT} \
                              --format=json \
                              --out-file=/tmp/infracost-base.json

      - name: Checkout pr branch
        uses: actions/checkout@v3
      
      - name: Generate Infracost cost estimate without terraform plan
        run: |
          infracost diff --path=${TF_ROOT} \
                        --format=json \
                        --compare-to=/tmp/infracost-base.json \
                        --out-file=/tmp/infracost.json

      - name: Post Infracost comment 
        run: |
          infracost comment github --path=/tmp/infracost.json \
                                    --repo=$GITHUB_REPOSITORY \
                                    --github-token=${{github.token}} \
                                    --pull-request=${{github.event.pull_request.number}} \
                                    --behavior=update

      # - name: Set up terraform
      #   uses: hashicorp/setup-terraform@v2

      # - name: Generate Infracost cost estimate with terraform plan
        
      #   run: |
      #     cd ${TF_ROOT}
      #     terraform init
      #     terraform plan -no-color -out=/tmp/plan.out
      #     terraform show -json /tmp/plan.out > /tmp/plan.json
      #     infracost breakdown --path=/tmp/plan.json \
      #                         --format=json \
      #                         --out-file=/tmp/infracost-2.json

      # - name: Archive results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: report with terraform plan
      #     path: /tmp/infracost-2.json

      # - name: Post Infracost comment
      #   run: |
      #     infracost comment github --path=/tmp/infracost-2.json \
      #                               --repo=$GITHUB_REPOSITORY \
      #                               --github-token=${{github.token}} \
      #                               --pull-request=${{github.event.pull_request.number}} \
      #                               --behavior=update